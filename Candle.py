# LED Candle animation for microypthon on esp8266

# Copyright 2018 Fritscher
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Values for the Gaussian distribution are taken from Eric's comment on https://cpldcpu.wordpress.com/2016/01/05/reverse-engineering-a-real-candle/
import time
import uos
import math
import machine, neopixel
from machine import Pin
# Import the music class from the buzzer_music module for easy song playback.
from buzzer_music import music

# ======================================================================================
class Buzzer(object):
    
    GPIO_PWM_PIN = 18
        
    def __init__(self):
        self.restCount = 0
        
    def rest(self):
        print("rest count:" + str(self.restCount))
        self.restCount = 10 
        
    def play(self):
        # Play music using the music class.
        # Find some music on onlinesequencer.net, click edit, select all notes with CTRL + A and then copy them with CTRL + C
        # Paste the string to song, making sure to remove the "Online Sequencer:120233:" from the start and the ";:" from the end
        # https://onlinesequencer.net/2474257 Happy Birthday (by Sudirth)
        jinglebells = '0 A5 1 19;3 A5 1 19;5 A5 4 19;11 A5 1 19;14 A5 1 19;17 A5 4 19;23 A5 1 19;25 D6 2 19;28 G5 3 19;31 A5 1 19;34 B5 3 19'
        
        happybirthday = '0 G4 3 0;3 G4 1 0;4 A4 4 0;8 G4 4 0;12 C5 4 0;16 B4 8 0;24 G4 3 0;27 G4 1 0;28 A4 4 0;32 G4 4 0;36 D5 4 0;40 C5 8 0;48 G4 3 0;51 G4 1 0;52 G5 4 0;56 E5 4 0;60 C5 4 0;64 B4 4 0;68 A4 4 0;72 F5 3 0;75 F5 1 0;76 E5 4 0;80 C5 4 0;84 D5 4 0;88 C5 8 0'
        
        happynewyear = '2 G6 1.8899999856948853 26 0.3858267664909363;4 A6 1.8899999856948853 26 0.3858267664909363;6 G6 3.7899999618530273 26 0.3858267664909363;10 F#6 1.8899999856948853 26 0.5039370059967041;12 A6 1.8899999856948853 26 0.3858267664909363;14 F#6 3.7899999618530273 26 0.3858267664909363;18 E6 1.8899999856948853 26 0.5039370059967041;20 A6 1.8899999856948853 26 0.3858267664909363;22 E6 1.8899999856948853 26 0.3858267664909363;26 F#6 1.8899999856948853 26 0.3858267664909363;28 A6 1.8899999856948853 26 0.3858267664909363;30 F#6 3.7899999618530273 26 0.3858267664909363;34 G6 1.8899999856948853 26 0.3858267664909363;36 A6 1.8899999856948853 26 0.3858267664909363;38 G6 3.7899999618530273 26 0.3858267664909363;42 F#6 1.8899999856948853 26 0.5039370059967041;44 A6 1.8899999856948853 26 0.3858267664909363;46 F#6 3.7899999618530273 26 0.3858267664909363;50 E6 1.8899999856948853 26 0.5039370059967041;52 A6 1.8899999856948853 26 0.3858267664909363;54 E6 3.7899999618530273 26 0.3858267664909363;58 F#6 1.8899999856948853 26 0.3858267664909363;60 A6 1.8899999856948853 26 0.3858267664909363;62 F#6 1.8899999856948853 26 0.3858267664909363;64 B5 5.989999771118164 26 0.5039370059967041;70 C6 0.9900000095367432 26 0.5039370059967041;71 B5 0.9900000095367432 26 0.5039370059967041;72 A5 1.9900000095367432 26 0.5039370059967041;74 G5 3.990000009536743 26 0.5039370059967041;78 G5 0.9900000095367432 26 0.6299212574958801;79 A5 0.9900000095367432 26 0.5039370059967041;80 B5 1.9900000095367432 26 0.5039370059967041;82 D6 1.9900000095367432 26 0.5039370059967041;84 G6 1.9900000095367432 26 0.5039370059967041;86 B6 1.9900000095367432 26 0.5039370059967041;88 F#6 3.990000009536743 26 0.5039370059967041;92 F#6 2.990000009536743 26 0.5039370059967041;95 G6 0.9900000095367432 26 0.5039370059967041;96 E6 5.989999771118164 26 0.5039370059967041;102 E6 0.9900000095367432 26 0.5039370059967041;103 F#6 0.9900000095367432 26 0.5039370059967041;104 D6 3.990000009536743 26 0.5039370059967041;108 G6 2.990000009536743 26 0.5039370059967041;111 F#6 0.9900000095367432 26 0.5039370059967041;112 F#6 1.9900000095367432 26 0.5039370059967041;114 E6 1.9900000095367432 26 0.5039370059967041;116 E6 1.9900000095367432 26 0.5039370059967041;118 D6 1.9900000095367432 26 0.5039370059967041;120 D6 5.989999771118164 26 0.5039370059967041;126 G5 0.9900000095367432 26 0.5039370059967041;127 A5 0.9900000095367432 26 0.5039370059967041;128 B5 3.990000009536743 26 0.5039370059967041;134 C6 0.9900000095367432 26 0.5039370059967041;135 B5 0.9900000095367432 26 0.5039370059967041;136 A5 1.9900000095367432 26 0.5039370059967041;138 G5 3.990000009536743 26 0.5039370059967041;142 G5 0.9900000095367432 26 0.5039370059967041;143 A5 0.9900000095367432 26 0.5039370059967041;144 B5 1.9900000095367432 26 0.5039370059967041;146 D6 1.9900000095367432 26 0.5039370059967041;148 G6 1.9900000095367432 26 0.5039370059967041;150 B6 1.9900000095367432 26 0.5039370059967041;152 F#6 3.990000009536743 26 0.5039370059967041;156 F#6 2.990000009536743 26 0.5039370059967041;159 G6 0.9900000095367432 26 0.5039370059967041;160 E6 5.989999771118164 26 0.5039370059967041;166 E6 0.9900000095367432 26 0.5039370059967041;167 F#6 0.9900000095367432 26 0.5039370059967041;168 D6 3.990000009536743 26 0.5039370059967041;172 G6 2.990000009536743 26 0.5039370059967041;175 F#6 0.9900000095367432 26 0.5039370059967041;176 F#6 1.9900000095367432 26 0.5039370059967041;178 E6 1.9900000095367432 26 0.5039370059967041;180 E6 1.9900000095367432 26 0.5039370059967041;182 D6 1.9900000095367432 26 0.5039370059967041;184 D6 3.990000009536743 26 0.5039370059967041;188 G6 2.990000009536743 26 0.5039370059967041;191 F#6 0.9900000095367432 26 0.5039370059967041;192 F#6 1.9900000095367432 26 0.5039370059967041;194 E6 5.989999771118164 26 0.5039370059967041;204 E6 1.9900000095367432 26 0.5039370059967041;206 D6 1.9900000095367432 26 0.5039370059967041;208 D6 7.989999771118164 26 0.5039370059967041;220 B5 0.9900000095367432 26 0.6299212574958801;221 C6 0.9900000095367432 26 0.6299212574958801;222 D6 0.9900000095367432 26 0.6299212574958801;223 B6 0.9900000095367432 26 0.6299212574958801;224 B6 3.990000009536743 26 0.6299212574958801;228 B5 0.9900000095367432 26 0.6299212574958801;229 C6 0.9900000095367432 26 0.6299212574958801;230 D6 0.9900000095367432 26 0.6299212574958801;231 A6 0.9900000095367432 26 0.6299212574958801;232 A6 3.990000009536743 26 0.6299212574958801;236 B5 0.9900000095367432 26 0.6299212574958801;237 C#6 0.9900000095367432 26 0.6299212574958801;238 D#6 1.9900000095367432 26 0.6299212574958801;242 G6 3.990000009536743 26 0.6299212574958801;246 F#6 1.9900000095367432 26 0.6299212574958801;248 E6 1.9900000095367432 26 0.6299212574958801;250 F#6 1.9900000095367432 26 0.6299212574958801;252 E6 1.9900000095367432 26 0.6299212574958801;254 D6 1.9900000095367432 26 0.6299212574958801;256 D6 3.990000009536743 26 0.6299212574958801;260 E6 1.9900000095367432 26 0.6299212574958801;262 D6 1.9900000095367432 26 0.6299212574958801;264 D6 1.9900000095367432 26 0.6299212574958801;266 E6 1.9900000095367432 26 0.6299212574958801;268 D6 1.9900000095367432 26 0.6299212574958801;270 C6 1.9900000095367432 26 0.6299212574958801;272 C6 1.9900000095367432 26 0.6299212574958801;274 B5 1.9900000095367432 26 0.6299212574958801;276 C6 1.9900000095367432 26 0.6299212574958801;278 D6 1.9900000095367432 26 0.6299212574958801;280 D6 0.9900000095367432 26 0.6299212574958801;281 C6 0.9900000095367432 26 0.6299212574958801;282 B5 0.9900000095367432 26 0.6299212574958801;283 A5 8.989999771118164 26 0.6299212574958801;292 B5 0.9900000095367432 26 0.6299212574958801;293 C6 0.9900000095367432 26 0.6299212574958801;294 D6 0.9900000095367432 26 0.6299212574958801;295 B6 0.9900000095367432 26 0.6299212574958801;296 B6 3.990000009536743 26 0.6299212574958801;300 B5 0.9900000095367432 26 0.6299212574958801;301 C6 0.9900000095367432 26 0.6299212574958801;302 D6 0.9900000095367432 26 0.6299212574958801;303 A6 0.9900000095367432 26 0.6299212574958801;304 A6 3.990000009536743 26 0.6299212574958801;308 B5 0.9900000095367432 26 0.6299212574958801;309 C#6 0.9900000095367432 26 0.6299212574958801;310 D#6 1.9900000095367432 26 0.6299212574958801;314 G6 3.990000009536743 26 0.6299212574958801;318 F#6 1.9900000095367432 26 0.6299212574958801;320 E6 1.9900000095367432 26 0.6299212574958801;322 F#6 1.9900000095367432 26 0.6299212574958801;324 E6 1.9900000095367432 26 0.6299212574958801;326 D6 1.9900000095367432 26 0.6299212574958801;328 D6 3.990000009536743 26 0.6299212574958801;332 E6 1.9900000095367432 26 0.6299212574958801;334 D6 1.9900000095367432 26 0.6299212574958801;336 D6 1.9900000095367432 26 0.6299212574958801;338 E6 1.9900000095367432 26 0.6299212574958801;340 D6 1.9900000095367432 26 0.6299212574958801;342 C6 1.9900000095367432 26 0.6299212574958801;344 C6 1.9900000095367432 26 0.6299212574958801;346 B5 1.9900000095367432 26 0.6299212574958801;348 C6 1.9900000095367432 26 0.6299212574958801;350 D6 1.9900000095367432 26 0.6299212574958801;352 D6 0.9900000095367432 26 0.6299212574958801;353 C6 0.9900000095367432 26 0.6299212574958801;354 B5 0.9900000095367432 26 0.6299212574958801;355 A5 8.989999771118164 26 0.6299212574958801;364 D6 1.9900000095367432 26 0.3858267664909363;366 D6 1.9900000095367432 26 0.3858267664909363;368 D6 0.9900000095367432 26 0.6299212574958801;369 C6 0.9900000095367432 26 0.6299212574958801;370 B5 0.9900000095367432 26 0.6299212574958801;371 A5 10.989999771118164 26 0.6299212574958801;382 C6 1.9900000095367432 26 0.3858267664909363;384 C6 0.9900000095367432 26 0.3858267664909363;385 B5 0.9900000095367432 26 0.3858267664909363;386 A5 0.9900000095367432 26 0.3858267664909363;387 G5 4.989999771118164 26 0.3858267664909363;394 G6 1.9900000095367432 26 0.3858267664909363;396 A6 1.9900000095367432 26 0.3858267664909363;398 G6 3.990000009536743 26 0.3858267664909363;402 F#6 1.9900000095367432 26 0.6299212574958801;404 A6 1.9900000095367432 26 0.3858267664909363;406 F#6 3.990000009536743 26 0.3858267664909363;410 E6 1.9900000095367432 26 0.6299212574958801;412 A6 1.9900000095367432 26 0.3858267664909363;414 E6 1.9900000095367432 26 0.3858267664909363;418 F#6 1.9900000095367432 26 0.3858267664909363;420 A6 1.9900000095367432 26 0.3858267664909363;422 F#6 3.990000009536743 26 0.3858267664909363;426 G6 1.9900000095367432 26 0.3858267664909363;428 A6 1.9900000095367432 26 0.3858267664909363;430 G6 3.990000009536743 26 0.3858267664909363;434 F#6 1.9900000095367432 26 0.6299212574958801;436 A6 1.9900000095367432 26 0.3858267664909363;438 F#6 3.990000009536743 26 0.3858267664909363;442 E6 1.9900000095367432 26 0.6299212574958801;444 A6 1.9900000095367432 26 0.3858267664909363;446 E6 3.990000009536743 26 0.3858267664909363;450 F#6 1.9900000095367432 26 0.3858267664909363;452 A6 1.9900000095367432 26 0.3858267664909363;454 F#6 1.9900000095367432 26 0.3858267664909363;456 G6 7.989999771118164 26 0.3858267664909363;0 G5 7.590000152587891 21 0.3858267664909363;8 F#5 7.590000152587891 21 0.5039370059967041;16 E5 7.590000152587891 21 0.5039370059967041;24 D5 7.590000152587891 21 0.3858267664909363;32 G5 7.590000152587891 21 0.3858267664909363;40 F#5 7.590000152587891 21 0.5039370059967041;48 E5 7.590000152587891 21 0.5039370059967041;56 D5 7.590000152587891 21 0.3858267664909363;64 G4 7.989999771118164 21 0.5039370059967041;72 D#5 7.989999771118164 21 0.6299212574958801;80 G4 7.989999771118164 21 0.6299212574958801;88 B4 7.989999771118164 21 0.5039370059967041;96 C5 7.989999771118164 21 0.5039370059967041;104 B4 7.989999771118164 21 0.5039370059967041;112 A4 7.989999771118164 21 0.5039370059967041;120 D4 1.9900000095367432 21 0.5039370059967041;122 A4 1.9900000095367432 21 0.6299212574958801;124 F#5 3.990000009536743 21 0.5039370059967041;128 G4 7.989999771118164 21 0.5039370059967041;136 D#5 7.989999771118164 21 0.6299212574958801;144 G4 7.989999771118164 21 0.6299212574958801;152 B4 7.989999771118164 21 0.5039370059967041;160 C5 7.989999771118164 21 0.5039370059967041;168 B4 7.989999771118164 21 0.5039370059967041;176 C5 7.989999771118164 21 0.5039370059967041;184 D5 7.989999771118164 21 0.5039370059967041;192 C5 3.990000009536743 21 0.5039370059967041;196 C5 3.990000009536743 21 0.6299212574958801;200 A4 1.9900000095367432 21 0.6299212574958801;202 E5 1.9900000095367432 21 0.6299212574958801;204 C#6 3.990000009536743 21 0.5039370059967041;208 D4 1.9900000095367432 21 0.5039370059967041;210 A4 1.9900000095367432 21 0.5039370059967041;212 C5 3.990000009536743 21 0.5039370059967041;216 D5 7.989999771118164 21 0.6299212574958801;224 G4 7.989999771118164 21 0.6299212574958801;232 B4 7.989999771118164 21 0.6299212574958801;240 E5 7.989999771118164 21 0.6299212574958801;248 C5 7.989999771118164 21 0.6299212574958801;256 B4 7.989999771118164 21 0.6299212574958801;264 G#4 7.989999771118164 21 0.6299212574958801;272 A4 7.989999771118164 21 0.6299212574958801;280 D4 3.990000009536743 21 0.6299212574958801;284 A4 3.990000009536743 21 0.6299212574958801;288 D5 7.989999771118164 21 0.6299212574958801;296 G4 7.989999771118164 21 0.6299212574958801;304 B4 7.989999771118164 21 0.6299212574958801;312 E5 7.989999771118164 21 0.6299212574958801;320 C5 7.989999771118164 21 0.6299212574958801;328 B4 7.989999771118164 21 0.6299212574958801;336 G#4 7.989999771118164 21 0.6299212574958801;344 A4 7.989999771118164 21 0.6299212574958801;352 D4 3.990000009536743 21 0.6299212574958801;356 A4 3.990000009536743 21 0.6299212574958801;360 D5 7.989999771118164 21 0.6299212574958801;368 D4 3.990000009536743 21 0.6299212574958801;372 A4 3.990000009536743 21 0.6299212574958801;376 D5 7.989999771118164 21 0.6299212574958801;384 G4 3.990000009536743 21 0.6299212574958801;388 D5 3.990000009536743 21 0.6299212574958801;392 G5 7.989999771118164 21 0.3858267664909363;400 F#5 7.989999771118164 21 0.6299212574958801;408 E5 7.989999771118164 21 0.6299212574958801;416 D5 7.989999771118164 21 0.3858267664909363;424 G5 7.989999771118164 21 0.3858267664909363;432 F#5 7.989999771118164 21 0.6299212574958801;440 E5 7.989999771118164 21 0.6299212574958801;448 D5 7.989999771118164 21 0.3858267664909363;456 G4 1.9900000095367432 21 0.3858267664909363;458 D5 1.9900000095367432 21 0.6299212574958801;460 G5 3.990000009536743 21 0.6299212574958801;113 A#3 1 43'
      
        song = ''
        
        r = randint(0, 10)
        
        if r < 5:
            song = happynewyear
        elif r < 8:
            song = happybirthday
        else:
            song = jinglebells
            
        # Initialize the music class with the song and set the buzzer pin
        self.mySong = music(song, pins=[machine.Pin(self.GPIO_PWM_PIN)])

        if (self.restCount > 0):
            self.restCount = self.restCount - 1
            return
        
        more = True
        while (more):
            more = self.mySong.tick()
            time.sleep(0.04)
            
        self.rest()

# ======================================================================================
class VibrationSensor(object):
        
    def __init__(self):
        GPIO_OUT_PIN = 15
        self.vibration_sensor = Pin(GPIO_OUT_PIN, Pin.IN)
        
    def isVibration(self):

        GPIO_OUT_PIN = 15
        self.vibration_sensor = Pin(GPIO_OUT_PIN, Pin.IN)
        
        # If the sensor detects vibration (value is 1), print a message
        if self.vibration_sensor.value() == 1:
            print("Vibration detected!")
            
            return True
        # If no vibration is detected, print ellipses
        else:
            print("...")
            return False
  

class EmberLight(object):
        
    RED = 255
    GREEN = 30
    BLUE = 10
    
    def __init__(self, pos):
        self.time = 0
        self.pos = pos    

    def update(self, delta):
        self.time = self.time - delta
        if self.time <= 0:
            self.mode()
            self.duration()

    def set_brightness(self, brightness):
        setPixelColor(self.pos, color(c_brightness(self.RED, brightness), c_brightness(self.GREEN, brightness), c_brightness(self.BLUE, brightness)))

    def mode(self):
        brightness = 40
        self.set_brightness(brightness)

    def duration(self):
        duration = 20
        self.time = duration

                    
class GlowLight(object):
    
    RED = 255
    GREEN = 120
    BLUE = 10
    
    def __init__(self, pos):
        self.time = 0
        self.pos = pos

    def update(self, delta):
        self.time = self.time - delta
        if self.time <= 0:
            self.random_mode()
            self.random_duration()

    def set_brightness(self, brightness):
        setPixelColor(self.pos, color(c_brightness(self.RED, brightness), c_brightness(self.GREEN, brightness), c_brightness(self.BLUE, brightness)))


    def random_mode(self):
        # Probability Random LED Brightness
        # 50% 77% â€“  80% (its barely noticeable)
        # 30% 80% â€“ 100% (very noticeable, sim. air flicker)
        #  5% 50% â€“  80% (very noticeable, blown out flame)
        #  5% 40% â€“  50% (very noticeable, blown out flame)
        # 10% 30% â€“  40% (very noticeable, blown out flame)
        brightness = 0
        r = randint(0, 100)
        if r < 50:
            brightness = randint(77, 80)
        elif r < 80:
            brightness = randint(80, 100)
        elif r < 85:
            brightness = randint(50, 80)
        elif r < 90:
            brightness = randint(40, 50)
        else:
            brightness = randint(30, 40)
        self.set_brightness(brightness)

    def random_duration(self):
        # Probability Random Time
        # 90% 20 ms
        #  3% 20 â€“ 30 ms
        #  3% 10 â€“ 20 ms
        #  4%  0 â€“ 10 ms
        r = randint(0, 100)
        if r < 90:
            self.time = 20
        elif r < 93:
            self.time = randint(20, 30)
        elif r < 96:
            self.time = randint(10, 20)
        else:
            self.time = randint(0, 10)

# ======================================================================================

# number of leds in the strip
LED_COUNT = 16
# Pico pin
GPIO_PIN = 16

np = neopixel.NeoPixel(machine.Pin(GPIO_PIN), LED_COUNT) #28

def show():
   np.write()

def color(r, g, b):
    return (int(r), int(g), int(b))

def setPixelColor(i, color):
    np[i] = color

def wait(ms):
   time.sleep(ms/1000.0)

def randint(min, max):
    return min + int(int.from_bytes(uos.urandom(2), 10) / 65536.0 * (max - min + 1))

def c_brightness(c, brightness):
    return max(0, min(c * brightness / 100, 255))

def lightCandles(candles):
    now = time.ticks_ms()
    [l.update(now) for l in candles]
    show()
        
def main():
    wait(10)
    
    buzzer = Buzzer()

    glowCandles = [GlowLight(i) for i in range(LED_COUNT)]
    emberCandles = [EmberLight(i) for i in range(LED_COUNT)]

    vibrationSensor = VibrationSensor()

    while True:
        
        vibration = vibrationSensor.isVibration()  

        if (vibration):
            lightCandles(emberCandles)
            buzzer.play()
        else:
            lightCandles(glowCandles)
    
        wait(60)
        
if __name__ == "__main__":
    main()    
        



